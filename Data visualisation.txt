Data visualisation In this course, you will learn:Data visualization principles to better communicate data-driven findingsHow to use ggplot2 to create custom plotsThe weaknesses of several widely used plots and why you should avoid themCourse overviewSection 1: Introduction to Data Visualization and DistributionsYou will get started with data visualization and distributions in R. Section 2: Introduction to ggplot2You will learn how to use ggplot2 to create plots. Section 3: Summarizing with dplyr You will learn how to summarize data using dplyr.Section 4: Gapminder You will see examples of ggplot2 and dplyr in action with the Gapminder dataset.Smooth density graph --> is a graph that has been converted from a histogram by taking the highest points of the histogram bars, then drawing a smooth line., and it makes it easier to compare distributions compared to histogram. Average <- sum(x) / length(x)SD <- sqrt(sum(x-average)^2) / length(x))z(standard unit) <- scale(x)	In statistics, a QпQ plot is a probability plot, which is a graphical method for comparing two probability distributions by plotting their quantiles against each other.#To use normal approximation to estimate the proportion of heights between 1 and 2, you can use the following code; approx <- pnorm(2, avg, stdev) - pnorm(1, avg, stdev)#pnorm gives all the values up to the given value (2/1), hence, to find the remaining you need to use (1-) or substract both values to get the value in between. # if you were given a percentage, you can use the qnorm function as follows; qnorm(%,avg, sd)Dplyr -->  is a new package which provides a set of tools for efficiently manipulating datasets in R. dplyr is the next iteration of plyr , focussing on only data frames. dplyr is faster, has a more consistent API and should be easier to use. # if we load dplyr, we can use the pipe (p <- murders %>% ggplot()), remember the pipe sends the object on the left of %>% to be the first argument for the function the right of %>%.# To create a scatter plot, we add a layer with the function geom_point. The aesthetic mappings require us to define the x-axis and y-axis variables respectively. So the code looks like this: murders %>% ggplot(aes(x = , y = )) +geom_point().And to add colour use this;p <- murders %>% ggplot(aes(population, total, label = abb, color = region)) + geom_label()# To filter a big dataset so that only certain values say only 1 to 10 and specific gender are included, use the following code; data <- name of the big dataset %>% filter(Values == " 1-10" & Gender == "female/male").$ --> is can be used to produce numeric vectors (average, rate etc) from pipe lines constructed in dplyr. group_by --> it is a function is dplyr and used to separated groups of values. Timeplot -->  (sometimes called a time series graph) displays values against time. They are similar to x-y graphs, but while an x-y graph can plot a variety of рxс variables (for example, height, weight, age), timeplots can only display time on the x-axis.df  --> can be created using the following code; df <- data.frame(female = female_percentiles, male = male_percentiles)Example useful code:#calculating  and plot dollars per day for African countries in 2010 using GDP data.gapminder %>%   mutate(dollars_per_day = gdp/population/365) %>%  filter(continent == "Africa" & year %in% c(1970,2010) & !is.na(dollars_per_day)) %>%    ggplot(aes(dollars_per_day, fill = region)) +   geom_density(bw=0.5, position = "stack") +   scale_x_continuous(trans = "log2") +   facet_grid(year ~ .)рссCreate the dollars_per_day variable for African countries in the years 1970 and 2010 this time.Make sure you remove any NA values.Create a smooth density plot of dollars per day for 1970 and 2010 using a log (base 2) scale for the x axis.Use facet_grid to show a different density plot for 1970 and 2010.Make sure the densities are smooth by using bw = 0.5.Use the fill and position arguments where appropriate to create the stacked histograms of each region.рсс